(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-1a432b7a"],{"4cce":function(c,e,t){"use strict";t.r(e);var a=t("7a23");const i={class:"container-clip"},p=Object(a["g"])('<section data-v-2fe8cbbf><div class="side" id="side1" data-v-2fe8cbbf></div><div class="side" id="side2" data-v-2fe8cbbf></div></section><div class="content-clip" data-v-2fe8cbbf><h2 data-v-2fe8cbbf>使用CSS3的clip-path(裁剪路径)实现剪贴区域的显示以及实例实现图片渐变</h2><p data-v-2fe8cbbf>clip-path属性可以防止部分元素通过定义的剪切区域来显示，仅通过显示的特殊区域。<br data-v-2fe8cbbf>剪切区域是被URL定义的路径代替行内或者外部svg，或者定义路线的方法例如circle().。clip-path属性代替了现在已经弃用的剪切 clip属性。</p><p data-v-2fe8cbbf>clip-path属性可以防止部分元素通过定义的剪切区域来显示，仅通过显示的特殊区域。<br data-v-2fe8cbbf>剪切区域是被URL定义的路径代替行内或者外部svg，或者定义路线的方法例如circle().。clip-path属性代替了现在已经弃用的剪切 clip属性。</p><p data-v-2fe8cbbf>clip-path属性可以防止部分元素通过定义的剪切区域来显示，仅通过显示的特殊区域。<br data-v-2fe8cbbf>剪切区域是被URL定义的路径代替行内或者外部svg，或者定义路线的方法例如circle().。clip-path属性代替了现在已经弃用的剪切 clip属性。</p><p data-v-2fe8cbbf>clip-path属性可以防止部分元素通过定义的剪切区域来显示，仅通过显示的特殊区域。<br data-v-2fe8cbbf>剪切区域是被URL定义的路径代替行内或者外部svg，或者定义路线的方法例如circle().。clip-path属性代替了现在已经弃用的剪切 clip属性。</p><p data-v-2fe8cbbf>clip-path属性可以防止部分元素通过定义的剪切区域来显示，仅通过显示的特殊区域。<br data-v-2fe8cbbf>剪切区域是被URL定义的路径代替行内或者外部svg，或者定义路线的方法例如circle().。clip-path属性代替了现在已经弃用的剪切 clip属性。</p><p data-v-2fe8cbbf>clip-path属性可以防止部分元素通过定义的剪切区域来显示，仅通过显示的特殊区域。<br data-v-2fe8cbbf>剪切区域是被URL定义的路径代替行内或者外部svg，或者定义路线的方法例如circle().。clip-path属性代替了现在已经弃用的剪切 clip属性。</p></div>',2),b=[p];function d(c,e,t,p,d,f){return Object(a["t"])(),Object(a["e"])("div",i,b)}var f={data(){return{}},methods:{menu(){let c=document.getElementById("side1"),e=document.getElementById("side2");c.style.left=-window.pageYOffset+"px",e.style.left=window.pageYOffset+"px"}},mounted(){window.addEventListener("scroll",this.menu)}},l=(t("b1ef"),t("6b0d")),s=t.n(l);const n=s()(f,[["render",d],["__scopeId","data-v-2fe8cbbf"]]);e["default"]=n},b15a:function(c,e,t){},b1ef:function(c,e,t){"use strict";t("b15a")}}]);